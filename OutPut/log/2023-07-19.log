2023-07-19 20:53:52 | ERROR | key:<re.Match object; span=(402, 419), match='{{response_time}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 20:53:52 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': '{{response_time}}', '期望值': '20', '实际值': '{{response_time}}', '断言方法': 'lt:实际值小于期望值'}]) : FAIL 存在结果元组中
2023-07-19 20:53:53 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 20:53:53 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'code', '期望值': 200, '实际值': 'code', '断言方法': 'eq:实际值与期望值相等'}, {'检查项': 'msg', '期望值': '添加成功', '实际值': 'msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 20:53:54 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 20:53:54 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 20:56:29 | ERROR | key:<re.Match object; span=(402, 419), match='{{response_time}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 20:56:30 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'code', '期望值': 200, '实际值': 'code', '断言方法': 'eq:实际值与期望值相等'}, {'检查项': 'msg', '期望值': '添加成功', '实际值': 'msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 20:56:31 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 20:57:50 | ERROR | key:<re.Match object; span=(402, 418), match='{{responseTime}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 20:57:51 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'code', '期望值': 200, '实际值': 'code', '断言方法': 'eq:实际值与期望值相等'}, {'检查项': 'msg', '期望值': '添加成功', '实际值': 'msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 20:57:52 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 21:01:29 | ERROR | key:<re.Match object; span=(402, 418), match='{{responseTime}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:01:29 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': '83.557', '期望值': '20', '实际值': '83.557', '断言方法': 'lt:实际值小于期望值'}]) : FAIL 存在结果元组中
2023-07-19 21:01:30 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:01:30 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'code', '期望值': 200, '实际值': 'code', '断言方法': 'eq:实际值与期望值相等'}, {'检查项': 'msg', '期望值': '添加成功', '实际值': 'msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 21:01:31 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:01:31 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 21:03:43 | ERROR | | called clear_date | error: 快看，异常了，别唧唧哇哇，快排查！！: [Errno 13] Permission denied: 'E:\\apitest\\cases\\cases\\test_api.xlsx'
2023-07-19 21:03:44 | ERROR | key:<re.Match object; span=(402, 418), match='{{responseTime}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:03:44 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': '91.902', '期望值': '20', '实际值': '91.902', '断言方法': 'lt:实际值小于期望值'}]) : FAIL 存在结果元组中
2023-07-19 21:03:44 | ERROR | | called write_back | error: 快看，异常了，别唧唧哇哇，快排查！！: [Errno 13] Permission denied: 'E:\\apitest\\cases\\cases\\test_api.xlsx'
2023-07-19 21:03:45 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:03:45 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 21:03:45 | ERROR | | called write_back | error: 快看，异常了，别唧唧哇哇，快排查！！: [Errno 13] Permission denied: 'E:\\apitest\\cases\\cases\\test_api.xlsx'
2023-07-19 21:03:47 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:03:47 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 21:03:47 | ERROR | | called write_back | error: 快看，异常了，别唧唧哇哇，快排查！！: [Errno 13] Permission denied: 'E:\\apitest\\cases\\cases\\test_api.xlsx'
2023-07-19 21:04:20 | ERROR | | called clear_date | error: 快看，异常了，别唧唧哇哇，快排查！！: [Errno 13] Permission denied: 'E:\\apitest\\cases\\cases\\test_api.xlsx'
2023-07-19 21:04:21 | ERROR | key:<re.Match object; span=(402, 418), match='{{responseTime}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:04:22 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 21:04:23 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 21:04:47 | ERROR | key:<re.Match object; span=(402, 418), match='{{responseTime}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:04:47 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': '89.434', '期望值': '20', '实际值': '89.434', '断言方法': 'lt:实际值小于期望值'}]) : FAIL 存在结果元组中
2023-07-19 21:04:48 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:04:48 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 21:04:49 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:04:49 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 21:11:14 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:11:15 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:12:41 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 21:12:42 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 21:13:31 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 21:13:32 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 21:21:16 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'check_rt': None, '检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 21:21:17 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 21:32:17 | ERROR | | called clear_date | error: 快看，异常了，别唧唧哇哇，快排查！！: [Errno 13] Permission denied: 'E:\\apitest\\cases\\cases\\test_api.xlsx'
2023-07-19 21:32:18 | ERROR | | called write_back | error: 快看，异常了，别唧唧哇哇，快排查！！: [Errno 13] Permission denied: 'E:\\apitest\\cases\\cases\\test_api.xlsx'
2023-07-19 21:32:19 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'check_rt': None, '检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 21:32:19 | ERROR | | called write_back | error: 快看，异常了，别唧唧哇哇，快排查！！: [Errno 13] Permission denied: 'E:\\apitest\\cases\\cases\\test_api.xlsx'
2023-07-19 21:32:20 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 21:32:20 | ERROR | | called write_back | error: 快看，异常了，别唧唧哇哇，快排查！！: [Errno 13] Permission denied: 'E:\\apitest\\cases\\cases\\test_api.xlsx'
2023-07-19 21:33:40 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': '95.54700000000001', '期望值': '20', '实际值': '95.54700000000001', '断言方法': 'lt:实际值小于期望值'}]) : FAIL 存在结果元组中
2023-07-19 21:33:41 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:33:41 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'check_rt': None, '检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 21:33:42 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:33:42 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 21:50:15 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 108.14500000000001, '期望值': 20, '实际值': 108.14500000000001, '断言方法': 'lt:实际值小于期望值'}]) : FAIL 存在结果元组中
2023-07-19 21:50:16 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:50:16 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'check_rt': None, '检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 21:50:17 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:50:17 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 21:55:46 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 108.132, '期望值': 20, '实际值': 108.132, '断言方法': 'lt:实际值小于期望值'}]) : FAIL 存在结果元组中
2023-07-19 21:55:47 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:55:47 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'check_rt': None, '检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 21:55:48 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:55:48 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 21:58:22 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 124.445, '期望值': 20, '实际值': 124.445, '断言方法': 'lt:实际值小于期望值'}]) : FAIL 存在结果元组中
2023-07-19 21:58:23 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:58:23 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'check_rt': None, '检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 21:58:24 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:58:24 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 21:58:53 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 93.627, '期望值': 20, '实际值': 93.627, '断言方法': 'lt:实际值小于期望值'}]) : FAIL 存在结果元组中
2023-07-19 21:58:54 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:58:54 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'check_rt': None, '检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 21:58:55 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 21:58:55 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 22:00:10 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 99.395, '期望值': 20, '实际值': 99.395, '断言方法': 'lt:实际值小于期望值'}]) : FAIL 存在结果元组中
2023-07-19 22:00:11 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 22:00:11 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'check_rt': None, '检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 22:00:12 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 22:00:12 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 22:02:38 | INFO | | 调用函数： load_built_in_comparators | args: () kwargs:{}
2023-07-19 22:02:38 | INFO | | 结束调用函数： load_built_in_comparators, duration：0.000013s
2023-07-19 22:02:38 | INFO | | 调用函数： clear_date | args: (<common.file_handling.do_excel.DoExcel object at 0x0000020B268F21C0>,) kwargs:{}
2023-07-19 22:02:38 | INFO | | 调用函数： get_excel_init | args: (<common.file_handling.do_excel.DoExcel object at 0x0000020B268F21C0>,) kwargs:{}
2023-07-19 22:02:38 | INFO | | 结束调用函数： get_excel_init, duration：0.000045s
2023-07-19 22:02:39 | INFO | | 结束调用函数： clear_date, duration：0.075347s
2023-07-19 22:02:39 | INFO | | 调用函数： get_excel_init | args: (<common.file_handling.do_excel.DoExcel object at 0x0000020B268F21C0>,) kwargs:{}
2023-07-19 22:02:39 | INFO | | 结束调用函数： get_excel_init, duration：0.000043s
2023-07-19 22:02:39 | INFO | | 调用函数： EncryptData | args: () kwargs:{}
2023-07-19 22:02:39 | INFO | | 结束调用函数： EncryptData, duration：0.000001s
2023-07-19 22:02:39 | INFO | | 调用函数： set_bif_fun | args: (Action(), <module 'common.bif_functions' from 'E:\\apitest\\common\\bif_functions\\__init__.py'>) kwargs:{}
2023-07-19 22:02:39 | INFO | | 调用函数： load_built_in_functions | args: (Action(), <module 'common.bif_functions' from 'E:\\apitest\\common\\bif_functions\\__init__.py'>) kwargs:{}
2023-07-19 22:02:39 | INFO | | 结束调用函数： load_built_in_functions, duration：0.000026s
2023-07-19 22:02:39 | INFO | | 结束调用函数： set_bif_fun, duration：0.001842s
2023-07-19 22:02:39 | INFO | | 调用函数： get_excel_init | args: (<common.file_handling.do_excel.DoExcel object at 0x0000020B268F21C0>,) kwargs:{}
2023-07-19 22:02:39 | INFO | | 结束调用函数： get_excel_init, duration：0.000045s
2023-07-19 22:02:39 | INFO | | 调用函数： set_bif_fun | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:02:39 | INFO | | 调用函数： load_built_in_functions | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:02:39 | INFO | | 结束调用函数： load_built_in_functions, duration：0.000008s
2023-07-19 22:02:39 | INFO | | 结束调用函数： set_bif_fun, duration：0.001865s
2023-07-19 22:02:39 | INFO | | 调用函数： set_bif_fun | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:02:39 | INFO | | 调用函数： load_built_in_functions | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:02:39 | INFO | | 结束调用函数： load_built_in_functions, duration：0.000008s
2023-07-19 22:02:39 | INFO | | 结束调用函数： set_bif_fun, duration：0.002050s
2023-07-19 22:02:40 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), None) kwargs:{}
2023-07-19 22:02:40 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.000004s
2023-07-19 22:02:40 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), {'Url': '/auth/loginByNotBip', 'Headers': '{"Content-Type": "application/json"}', 'Query Str': None, 'Request Data Type': 'json', 'Request Data': '{"account": "{{account}}", "password": "{{passwd}}"}', 'Response': '', 'Assertion': '', 'Error Log': ''}) kwargs:{}
2023-07-19 22:02:40 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.000180s
2023-07-19 22:02:40 | INFO | | 调用函数： substitute_data | args: (Action(), '{"account": "18127813600", "password": "ZHh5BTduCaPU+4Ni8Zpk62ynfZI5mc2hrXcMUpymgLkV3wrOjWiB97MZyWXO5TBAbYHG37HNoAejWNUUMnerQlFN52i40F3EIFrZ4Lq+9KIq4K8cfQriWDBSssy6i7DaiZcsZu1vI47Wz7+FShdOE2gpiO7iQo3+b4KoQS3ZZXA="}') kwargs:{'jp_dict': '{"tvSequence": "$..account"}'}
2023-07-19 22:02:40 | INFO | | 结束调用函数： substitute_data, duration：0.024628s
2023-07-19 22:02:40 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), '{"check":{{responseTime}},"comparator":"lt","expect":20}') kwargs:{}
2023-07-19 22:02:40 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.000042s
2023-07-19 22:02:40 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 99.56, '期望值': 20, '实际值': 99.56, '断言方法': 'lt:实际值小于期望值'}]) : FAIL 存在结果元组中
2023-07-19 22:02:40 | INFO | | 调用函数： write_back | args: (<common.file_handling.do_excel.DoExcel object at 0x0000020B268F21C0>,) kwargs:{'sheet_name': 'safe', 'i': 2, 'response': '{"code":"0","type":"success","data":{"id":"216897748901771157","userId":"216483504447804297","ibsUserId":7884,"mobile":"18127813600","bspToken":"a364383dd1cb02de8913ce569f33ef31","type":"user","avatar":null,"ncAccount":null,"timestamp":1689775367,"idpTokenId":null,"loginChannel":null,"clientType":null,"name":"陈勇志","btpToken":null,"account":"18127813600","accountType":"C","currentEnvId":null,"currentTenantId":"216260762345772077","currentAppId":"8d1f5bdc9c6648af84a98e2c017846c5","currentProjectId":"103654","currentOrgId":null,"currentMenuId":null,"currentOrgMenuId":null,"currentSelectedTab":"org","currentUrl":"/ibs/newLabor/basicConfig/Index","tenants":[{"id":"1623811301356297657","code":"1623811301356297657","fullName":"广东博嘉拓建筑测试租户","shortName":"广东博嘉拓建筑测试租户","envId":"6296f5e3960c4fdfb9c9357b581c853b","envName":"默认环境","tenantEnvs":null},{"id":"216572673247394736","code":"9C8D5715AAA44D4B8530AB2B7F627E1A","fullName":"安徽腾越建筑工程有限公司","shortName":"安徽腾越建筑工程有限公司","envId":"d1b4f959495f433fb1dd5400a78bce2c","envName":"默认环境","tenantEnvs":null},{"id":"216317749963825419","code":"C2C35D2543B34CA99366D9C76E45D01B","fullName":"沈阳腾越建筑测试租户","shortName":"沈阳腾越建筑测试租户","envId":"c4a70c0a1f5c4aaa83fcd390dcd898c6","envName":"默认环境","tenantEnvs":null},{"id":"216260762345772077","code":"216260762345772077","fullName":"广东腾越建筑工程有限公司","shortName":"广东腾越建筑工程有限公司","envId":"210712034943271000","envName":"默认环境","tenantEnvs":null},{"id":"216328986981406025","code":"TENANT_TEST","fullName":"智慧工地测试租户9","shortName":"智慧工地测试租户9","envId":"e7682a3876a343b483645b0c20da93a3","envName":"默认环境","tenantEnvs":null},{"id":"216365124588606373","code":"TENANT_TEST","fullName":"计划排程自动化测试","shortName":"计划排程自动化测试","envId":"80ce8eb5a7c941f8a6f57b8ecb61ec17","envName":"默认环境","tenantEnvs":null},{"id":"216674624791091228","code":"232E9186B1BE494E966F27BA7CF33AE2","fullName":"cyq测试","shortName":"cyq测试","envId":"ef3f8ed4792f4ef0a5e7d92af394d29c","envName":"默认环境","tenantEnvs":null},{"id":"216687529947792866","code":"9769454E01304245AEE83CE7E99537A8","fullName":"成本总控报表测试租户","shortName":"成本总控报表测试租户","envId":"5125917072884123bf9fe3966ffa4af2","envName":"默认环境","tenantEnvs":null},{"id":"216661417159402453","code":"216661417159402453","fullName":"科技建筑集团","shortName":"科技建筑集团","envId":"b23d88da977e467cb81dd7fb57de97d0","envName":"默认环境","tenantEnvs":null},{"id":"216281557054332425","code":"216281557054332425","fullName":"BIM材料用量计算","shortName":"BIM材料用量计算","envId":"7501c77b0ccd4b4d912451e5f74c1ba7","envName":"默认环境","tenantEnvs":null},{"id":"1320970534539886592","code":"1320970534539886592","fullName":"碧桂园集团","shortName":"碧桂园集团","envId":"1320970534539886592","envName":"默认环境","tenantEnvs":null}],"loginAppDto":null},"msg":null,"succeed":true}', 'test_result': 'FAIL', 'assert_log': "('FAIL', [{'check_rt': None, '检查项': 99.56, '期望值': 20, '实际值': 99.56, '断言方法': 'lt:实际值小于期望值'}])"}
2023-07-19 22:02:40 | INFO | | 结束调用函数： write_back, duration：0.084348s
2023-07-19 22:02:40 | INFO | | 调用函数： set_bif_fun | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:02:40 | INFO | | 调用函数： load_built_in_functions | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:02:40 | INFO | | 结束调用函数： load_built_in_functions, duration：0.000026s
2023-07-19 22:02:40 | INFO | | 结束调用函数： set_bif_fun, duration：0.002193s
2023-07-19 22:02:40 | INFO | | 调用函数： set_bif_fun | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:02:40 | INFO | | 调用函数： load_built_in_functions | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:02:40 | INFO | | 结束调用函数： load_built_in_functions, duration：0.000008s
2023-07-19 22:02:40 | INFO | | 结束调用函数： set_bif_fun, duration：0.001733s
2023-07-19 22:02:41 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), None) kwargs:{}
2023-07-19 22:02:41 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.000004s
2023-07-19 22:02:41 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), {'Url': '/ibs/api/ibs-lms-base/tvConfig/addTvSequence?t={{get_timestamp()}}', 'Headers': '{"tvSequence":"{{tvSequence}}","Content-Type":"application/json;charset=utf-8","BSP_TOKEN":"{{BSP_TOKEN}}","BSP_USER_TENANT":"{{BSP_USER_TENANT}}"}', 'Query Str': None, 'Request Data Type': 'json', 'Request Data': '{"projectId":"{{projectId}}","tvSequence":"{{random_string()}}"}', 'Response': '', 'Assertion': '', 'Error Log': ''}) kwargs:{}
2023-07-19 22:02:41 | INFO | | 调用函数： get_timestamp | args: () kwargs:{}
2023-07-19 22:02:41 | INFO | | 结束调用函数： get_timestamp, duration：0.000015s
2023-07-19 22:02:41 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 22:02:41 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.005535s
2023-07-19 22:02:41 | INFO | | 调用函数： substitute_data | args: (Action(), '{"projectId":"{{projectId}}","tvSequence":"lKmwDNYWLSUOMbLzxNfT"}') kwargs:{'jp_dict': '{"tvSequence": "$..tvSequence"}'}
2023-07-19 22:02:41 | INFO | | 结束调用函数： substitute_data, duration：0.023907s
2023-07-19 22:02:41 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), '[{"check":"$.code","comparator":"eq","expect":200},{"check":"$.msg","comparator":"eq","expect":"添加成功"}]') kwargs:{}
2023-07-19 22:02:41 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.000026s
2023-07-19 22:02:41 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'check_rt': None, '检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 22:02:41 | INFO | | 调用函数： write_back | args: (<common.file_handling.do_excel.DoExcel object at 0x0000020B268F21C0>,) kwargs:{'sheet_name': 'safe', 'i': 4, 'response': '{"code":"AG_100003","msg":"您的登陆状态已过期，请重新登陆。","showType":2,"succeed":false}', 'test_result': 'FAIL', 'assert_log': "('FAIL', [{'check_rt': None, '检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'check_rt': None, '检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}])"}
2023-07-19 22:02:41 | INFO | | 结束调用函数： write_back, duration：0.076274s
2023-07-19 22:02:41 | INFO | | 调用函数： set_bif_fun | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:02:41 | INFO | | 调用函数： load_built_in_functions | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:02:41 | INFO | | 结束调用函数： load_built_in_functions, duration：0.000011s
2023-07-19 22:02:41 | INFO | | 结束调用函数： set_bif_fun, duration：0.002281s
2023-07-19 22:02:42 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), None) kwargs:{}
2023-07-19 22:02:42 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.000002s
2023-07-19 22:02:42 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), {'Url': '/ibs/api/ibs-lms-base/tvConfig/listTvSequence?t={{get_timestamp()}}&projectId={{projectId}}', 'Headers': '{"Content-Type":"application/json;charset=utf-8","BSP_TOKEN":"{{BSP_TOKEN}}","BSP_USER_TENANT":"{{BSP_USER_TENANT}}","test":"{{tvSequence}}"}', 'Query Str': None, 'Request Data Type': 'params', 'Request Data': None, 'Response': '', 'Assertion': '', 'Error Log': ''}) kwargs:{}
2023-07-19 22:02:42 | INFO | | 调用函数： get_timestamp | args: () kwargs:{}
2023-07-19 22:02:42 | INFO | | 结束调用函数： get_timestamp, duration：0.000007s
2023-07-19 22:02:42 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 22:02:42 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.003517s
2023-07-19 22:02:42 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), '{"check":"data.projectId","comparator":"contained_by","expect":"{{projectId}}"}') kwargs:{}
2023-07-19 22:02:42 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.000050s
2023-07-19 22:02:42 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 22:02:42 | INFO | | 调用函数： write_back | args: (<common.file_handling.do_excel.DoExcel object at 0x0000020B268F21C0>,) kwargs:{'sheet_name': 'safe', 'i': 5, 'response': '{"code":"AG_100003","msg":"您的登陆状态已过期，请重新登陆。","showType":2,"succeed":false}', 'test_result': 'FAIL', 'assert_log': "('FAIL', [{'check_rt': None, '检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}])"}
2023-07-19 22:02:42 | INFO | | 结束调用函数： write_back, duration：0.073453s
2023-07-19 22:02:42 | INFO | 所有用例执行完毕
2023-07-19 22:03:42 | INFO | | 调用函数： load_built_in_comparators | args: () kwargs:{}
2023-07-19 22:03:42 | INFO | | 结束调用函数： load_built_in_comparators, duration：0.000036s
2023-07-19 22:03:43 | INFO | | 调用函数： clear_date | args: (<common.file_handling.do_excel.DoExcel object at 0x0000025F483421C0>,) kwargs:{}
2023-07-19 22:03:43 | INFO | | 调用函数： get_excel_init | args: (<common.file_handling.do_excel.DoExcel object at 0x0000025F483421C0>,) kwargs:{}
2023-07-19 22:03:43 | INFO | | 结束调用函数： get_excel_init, duration：0.000045s
2023-07-19 22:03:43 | INFO | | 结束调用函数： clear_date, duration：0.075481s
2023-07-19 22:03:43 | INFO | | 调用函数： get_excel_init | args: (<common.file_handling.do_excel.DoExcel object at 0x0000025F483421C0>,) kwargs:{}
2023-07-19 22:03:43 | INFO | | 结束调用函数： get_excel_init, duration：0.000044s
2023-07-19 22:03:43 | INFO | | 调用函数： EncryptData | args: () kwargs:{}
2023-07-19 22:03:43 | INFO | | 结束调用函数： EncryptData, duration：0.000001s
2023-07-19 22:03:43 | INFO | | 调用函数： set_bif_fun | args: (Action(), <module 'common.bif_functions' from 'E:\\apitest\\common\\bif_functions\\__init__.py'>) kwargs:{}
2023-07-19 22:03:43 | INFO | | 调用函数： load_built_in_functions | args: (Action(), <module 'common.bif_functions' from 'E:\\apitest\\common\\bif_functions\\__init__.py'>) kwargs:{}
2023-07-19 22:03:43 | INFO | | 结束调用函数： load_built_in_functions, duration：0.000023s
2023-07-19 22:03:43 | INFO | | 结束调用函数： set_bif_fun, duration：0.002302s
2023-07-19 22:03:43 | INFO | | 调用函数： get_excel_init | args: (<common.file_handling.do_excel.DoExcel object at 0x0000025F483421C0>,) kwargs:{}
2023-07-19 22:03:43 | INFO | | 结束调用函数： get_excel_init, duration：0.000042s
2023-07-19 22:03:43 | INFO | | 调用函数： set_bif_fun | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:03:43 | INFO | | 调用函数： load_built_in_functions | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:03:43 | INFO | | 结束调用函数： load_built_in_functions, duration：0.000008s
2023-07-19 22:03:43 | INFO | | 结束调用函数： set_bif_fun, duration：0.001910s
2023-07-19 22:03:43 | INFO | | 调用函数： set_bif_fun | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:03:43 | INFO | | 调用函数： load_built_in_functions | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:03:43 | INFO | | 结束调用函数： load_built_in_functions, duration：0.000007s
2023-07-19 22:03:43 | INFO | | 结束调用函数： set_bif_fun, duration：0.002326s
2023-07-19 22:03:44 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), None) kwargs:{}
2023-07-19 22:03:44 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.000006s
2023-07-19 22:03:44 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), {'Url': '/auth/loginByNotBip', 'Headers': '{"Content-Type": "application/json"}', 'Query Str': None, 'Request Data Type': 'json', 'Request Data': '{"account": "{{account}}", "password": "{{passwd}}"}', 'Response': '', 'Assertion': '', 'Error Log': ''}) kwargs:{}
2023-07-19 22:03:44 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.000180s
2023-07-19 22:03:44 | INFO | | 调用函数： substitute_data | args: (Action(), '{"account": "18127813600", "password": "ZHh5BTduCaPU+4Ni8Zpk62ynfZI5mc2hrXcMUpymgLkV3wrOjWiB97MZyWXO5TBAbYHG37HNoAejWNUUMnerQlFN52i40F3EIFrZ4Lq+9KIq4K8cfQriWDBSssy6i7DaiZcsZu1vI47Wz7+FShdOE2gpiO7iQo3+b4KoQS3ZZXA="}') kwargs:{'jp_dict': '{"tvSequence": "$..account"}'}
2023-07-19 22:03:44 | INFO | | 结束调用函数： substitute_data, duration：0.037463s
2023-07-19 22:03:44 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), '{"check":{{responseTime}},"comparator":"lt","expect":20}') kwargs:{}
2023-07-19 22:03:44 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.000044s
2023-07-19 22:03:44 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 86.245, '期望值': 20, '实际值': 86.245, '断言方法': 'lt:实际值小于期望值'}]) : FAIL 存在结果元组中
2023-07-19 22:03:44 | INFO | | 调用函数： write_back | args: (<common.file_handling.do_excel.DoExcel object at 0x0000025F483421C0>,) kwargs:{'sheet_name': 'safe', 'i': 2, 'response': '{"code":"0","type":"success","data":{"id":"216897754319782156","userId":"216483504447804297","ibsUserId":7884,"mobile":"18127813600","bspToken":"2608e7cd6acb3d8291a0a11035cbd3b1","type":"user","avatar":null,"ncAccount":null,"timestamp":1689775431,"idpTokenId":null,"loginChannel":null,"clientType":null,"name":"陈勇志","btpToken":null,"account":"18127813600","accountType":"C","currentEnvId":null,"currentTenantId":"216260762345772077","currentAppId":"8d1f5bdc9c6648af84a98e2c017846c5","currentProjectId":"103654","currentOrgId":null,"currentMenuId":null,"currentOrgMenuId":null,"currentSelectedTab":"org","currentUrl":"/ibs/newLabor/basicConfig/Index","tenants":[{"id":"1623811301356297657","code":"1623811301356297657","fullName":"广东博嘉拓建筑测试租户","shortName":"广东博嘉拓建筑测试租户","envId":"6296f5e3960c4fdfb9c9357b581c853b","envName":"默认环境","tenantEnvs":null},{"id":"216572673247394736","code":"9C8D5715AAA44D4B8530AB2B7F627E1A","fullName":"安徽腾越建筑工程有限公司","shortName":"安徽腾越建筑工程有限公司","envId":"d1b4f959495f433fb1dd5400a78bce2c","envName":"默认环境","tenantEnvs":null},{"id":"216317749963825419","code":"C2C35D2543B34CA99366D9C76E45D01B","fullName":"沈阳腾越建筑测试租户","shortName":"沈阳腾越建筑测试租户","envId":"c4a70c0a1f5c4aaa83fcd390dcd898c6","envName":"默认环境","tenantEnvs":null},{"id":"216260762345772077","code":"216260762345772077","fullName":"广东腾越建筑工程有限公司","shortName":"广东腾越建筑工程有限公司","envId":"210712034943271000","envName":"默认环境","tenantEnvs":null},{"id":"216328986981406025","code":"TENANT_TEST","fullName":"智慧工地测试租户9","shortName":"智慧工地测试租户9","envId":"e7682a3876a343b483645b0c20da93a3","envName":"默认环境","tenantEnvs":null},{"id":"216365124588606373","code":"TENANT_TEST","fullName":"计划排程自动化测试","shortName":"计划排程自动化测试","envId":"80ce8eb5a7c941f8a6f57b8ecb61ec17","envName":"默认环境","tenantEnvs":null},{"id":"216674624791091228","code":"232E9186B1BE494E966F27BA7CF33AE2","fullName":"cyq测试","shortName":"cyq测试","envId":"ef3f8ed4792f4ef0a5e7d92af394d29c","envName":"默认环境","tenantEnvs":null},{"id":"216687529947792866","code":"9769454E01304245AEE83CE7E99537A8","fullName":"成本总控报表测试租户","shortName":"成本总控报表测试租户","envId":"5125917072884123bf9fe3966ffa4af2","envName":"默认环境","tenantEnvs":null},{"id":"216661417159402453","code":"216661417159402453","fullName":"科技建筑集团","shortName":"科技建筑集团","envId":"b23d88da977e467cb81dd7fb57de97d0","envName":"默认环境","tenantEnvs":null},{"id":"216281557054332425","code":"216281557054332425","fullName":"BIM材料用量计算","shortName":"BIM材料用量计算","envId":"7501c77b0ccd4b4d912451e5f74c1ba7","envName":"默认环境","tenantEnvs":null},{"id":"1320970534539886592","code":"1320970534539886592","fullName":"碧桂园集团","shortName":"碧桂园集团","envId":"1320970534539886592","envName":"默认环境","tenantEnvs":null}],"loginAppDto":null},"msg":null,"succeed":true}', 'test_result': 'FAIL', 'assert_log': "('FAIL', [{'check_rt': None, '检查项': 86.245, '期望值': 20, '实际值': 86.245, '断言方法': 'lt:实际值小于期望值'}])"}
2023-07-19 22:03:44 | INFO | | 结束调用函数： write_back, duration：0.073642s
2023-07-19 22:03:44 | INFO | | 调用函数： set_bif_fun | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:03:44 | INFO | | 调用函数： load_built_in_functions | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:03:44 | INFO | | 结束调用函数： load_built_in_functions, duration：0.000008s
2023-07-19 22:03:44 | INFO | | 结束调用函数： set_bif_fun, duration：0.002119s
2023-07-19 22:03:44 | INFO | | 调用函数： set_bif_fun | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:03:44 | INFO | | 调用函数： load_built_in_functions | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:03:44 | INFO | | 结束调用函数： load_built_in_functions, duration：0.000007s
2023-07-19 22:03:44 | INFO | | 结束调用函数： set_bif_fun, duration：0.002234s
2023-07-19 22:03:45 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), None) kwargs:{}
2023-07-19 22:03:45 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.000003s
2023-07-19 22:03:45 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), {'Url': '/ibs/api/ibs-lms-base/tvConfig/addTvSequence?t={{get_timestamp()}}', 'Headers': '{"tvSequence":"{{tvSequence}}","Content-Type":"application/json;charset=utf-8","BSP_TOKEN":"{{BSP_TOKEN}}","BSP_USER_TENANT":"{{BSP_USER_TENANT}}"}', 'Query Str': None, 'Request Data Type': 'json', 'Request Data': '{"projectId":"{{projectId}}","tvSequence":"{{random_string()}}"}', 'Response': '', 'Assertion': '', 'Error Log': ''}) kwargs:{}
2023-07-19 22:03:45 | INFO | | 调用函数： get_timestamp | args: () kwargs:{}
2023-07-19 22:03:45 | INFO | | 结束调用函数： get_timestamp, duration：0.000014s
2023-07-19 22:03:45 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 22:03:45 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.005656s
2023-07-19 22:03:45 | INFO | | 调用函数： substitute_data | args: (Action(), '{"projectId":"{{projectId}}","tvSequence":"GSovTnbELYHBqzqxCdzZ"}') kwargs:{'jp_dict': '{"tvSequence": "$..tvSequence"}'}
2023-07-19 22:03:45 | INFO | | 结束调用函数： substitute_data, duration：0.020842s
2023-07-19 22:03:45 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), '[{"check":"$.code","comparator":"eq","expect":200},{"check":"$.msg","comparator":"eq","expect":"添加成功"}]') kwargs:{}
2023-07-19 22:03:45 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.000050s
2023-07-19 22:03:45 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'check_rt': None, '检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 22:03:45 | INFO | | 调用函数： write_back | args: (<common.file_handling.do_excel.DoExcel object at 0x0000025F483421C0>,) kwargs:{'sheet_name': 'safe', 'i': 4, 'response': '{"code":"AG_100003","msg":"您的登陆状态已过期，请重新登陆。","showType":2,"succeed":false}', 'test_result': 'FAIL', 'assert_log': "('FAIL', [{'check_rt': None, '检查项': '$.code', '期望值': 200, '实际值': '$.code', '断言方法': 'eq:实际值与期望值相等'}, {'check_rt': None, '检查项': '$.msg', '期望值': '添加成功', '实际值': '$.msg', '断言方法': 'eq:实际值与期望值相等'}])"}
2023-07-19 22:03:45 | INFO | | 结束调用函数： write_back, duration：0.081924s
2023-07-19 22:03:45 | INFO | | 调用函数： set_bif_fun | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:03:45 | INFO | | 调用函数： load_built_in_functions | args: (Action(), <module 'extensions.dynamic_scaling_methods' from 'E:\\apitest\\extensions\\dynamic_scaling_methods.py'>) kwargs:{}
2023-07-19 22:03:45 | INFO | | 结束调用函数： load_built_in_functions, duration：0.000009s
2023-07-19 22:03:45 | INFO | | 结束调用函数： set_bif_fun, duration：0.002199s
2023-07-19 22:03:46 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), None) kwargs:{}
2023-07-19 22:03:46 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.000003s
2023-07-19 22:03:47 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), {'Url': '/ibs/api/ibs-lms-base/tvConfig/listTvSequence?t={{get_timestamp()}}&projectId={{projectId}}', 'Headers': '{"Content-Type":"application/json;charset=utf-8","BSP_TOKEN":"{{BSP_TOKEN}}","BSP_USER_TENANT":"{{BSP_USER_TENANT}}","test":"{{tvSequence}}"}', 'Query Str': None, 'Request Data Type': 'params', 'Request Data': None, 'Response': '', 'Assertion': '', 'Error Log': ''}) kwargs:{}
2023-07-19 22:03:47 | INFO | | 调用函数： get_timestamp | args: () kwargs:{}
2023-07-19 22:03:47 | INFO | | 结束调用函数： get_timestamp, duration：0.000014s
2023-07-19 22:03:47 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 22:03:47 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.005533s
2023-07-19 22:03:47 | INFO | | 调用函数： replace_dependent_parameter | args: (Action(), '{"check":"data.projectId","comparator":"contained_by","expect":"{{projectId}}"}') kwargs:{}
2023-07-19 22:03:47 | INFO | | 结束调用函数： replace_dependent_parameter, duration：0.000083s
2023-07-19 22:03:47 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'check_rt': None, '检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 22:03:47 | INFO | | 调用函数： write_back | args: (<common.file_handling.do_excel.DoExcel object at 0x0000025F483421C0>,) kwargs:{'sheet_name': 'safe', 'i': 5, 'response': '{"code":"AG_100003","msg":"您的登陆状态已过期，请重新登陆。","showType":2,"succeed":false}', 'test_result': 'FAIL', 'assert_log': "('FAIL', [{'check_rt': None, '检查项': 'data.projectId', '期望值': '103654', '实际值': 'data.projectId', '断言方法': 'contained_by:实际值被包含在期望值中'}])"}
2023-07-19 22:03:47 | INFO | | 结束调用函数： write_back, duration：0.088302s
2023-07-19 22:03:47 | INFO | 所有用例执行完毕
2023-07-19 22:13:25 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
name 'check_rt' is not defined
2023-07-19 22:13:26 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 22:13:26 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
name 'check_rt' is not defined
2023-07-19 22:13:27 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 22:13:27 | ERROR | 提取失败：提取表达式：data.projectId，没有提取到对应的值
2023-07-19 22:13:27 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
name 'check_rt' is not defined
2023-07-19 22:14:00 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 108.67699999999999, '期望值': 20, '实际值': 108.67699999999999, '断言方法': 'lt:实际值小于期望值'}]) : FAIL 存在结果元组中
2023-07-19 22:14:02 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 22:14:02 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': '$.code', '期望值': 200, '实际值': 'AG_100003', '断言方法': 'eq:实际值与期望值相等'}, {'检查项': '$.msg', '期望值': '添加成功', '实际值': '您的登陆状态已过期，请重新登陆。', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 22:14:03 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 22:14:03 | ERROR | 提取失败：提取表达式：data.projectId，没有提取到对应的值
2023-07-19 22:14:03 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'data.projectId', '期望值': '103654', '实际值': [], '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 22:15:57 | ERROR | 提取失败：提取表达式：700，没有提取到对应的值
2023-07-19 22:16:56 | ERROR | 提取失败：提取表达式：700，没有提取到对应的值
2023-07-19 22:17:30 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 94.92699999999999, '期望值': 20, '实际值': 94.92699999999999, '断言方法': 'lt:实际值小于期望值'}]) : FAIL 存在结果元组中
2023-07-19 22:17:31 | ERROR | key:<re.Match object; span=(184, 197), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 22:17:31 | ERROR | 异常用例: **safe_4_劳务基础配置_绑定TV**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': '$.code', '期望值': 200, '实际值': 'AG_100003', '断言方法': 'eq:实际值与期望值相等'}, {'检查项': '$.msg', '期望值': '添加成功', '实际值': '您的登陆状态已过期，请重新登陆。', '断言方法': 'eq:实际值与期望值相等'}]) : FAIL 存在结果元组中
2023-07-19 22:17:32 | ERROR | key:<re.Match object; span=(171, 184), match='{{BSP_TOKEN}}'>,在关联参数表中查询不到,请检查关联参数字段提取及填写是否正常

2023-07-19 22:17:32 | ERROR | 提取失败：提取表达式：data.projectId，没有提取到对应的值
2023-07-19 22:17:32 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'data.projectId', '期望值': '103654', '实际值': [], '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 22:18:47 | ERROR | | called clear_date | error: 快看，异常了，别唧唧哇哇，快排查！！: [Errno 13] Permission denied: 'E:\\apitest\\cases\\cases\\test_api.xlsx'
2023-07-19 22:27:34 | ERROR | 异常用例: **safe_2_登录_非BIP用户登录**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 114.75200000000001, '期望值': 20, '实际值': 114.75200000000001, '断言方法': 'lt:实际值小于期望值'}]) : FAIL 存在结果元组中
2023-07-19 22:27:36 | ERROR | 提取失败：提取表达式：data.projectId，没有提取到对应的值
2023-07-19 22:27:36 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': 'data.projectId', '期望值': '103654', '实际值': [], '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
2023-07-19 22:29:28 | ERROR | 提取失败：提取表达式：$.data.projectId，没有提取到对应的值
2023-07-19 22:29:28 | ERROR | 异常用例: **safe_5_劳务基础配置_查询配置**
'FAIL' unexpectedly found in ('FAIL', [{'检查项': '$.data.projectId', '期望值': '103654', '实际值': [], '断言方法': 'contained_by:实际值被包含在期望值中'}]) : FAIL 存在结果元组中
